# Generated by Django 5.2 on 2025-05-06 13:56

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_courses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClassCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(choices=[('Creche', 'Creche'), ('Nursery', 'Nursery'), ('KG 1', 'KG 1'), ('KG 2', 'KG 2'), ('Class 1', 'Class 1'), ('Class 2', 'Class 2'), ('Class 3', 'Class 3'), ('Class 4', 'Class 4'), ('Class 5', 'Class 5'), ('Class 6', 'Class 6'), ('JHS 1', 'JHS 1'), ('JHS 2', 'JHS 2'), ('JHS 3', 'JHS 3')], help_text='Class this course is assigned to', max_length=10)),
                ('term', models.CharField(choices=[('first', 'First Term'), ('second', 'Second Term'), ('third', 'Third Term')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_assignments', to='ResultsEntry.course')),
            ],
            options={
                'ordering': ['class_name', 'term', 'course__name'],
                'unique_together': {('course', 'class_name', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(choices=[('Creche', 'Creche'), ('Nursery', 'Nursery'), ('KG 1', 'KG 1'), ('KG 2', 'KG 2'), ('Class 1', 'Class 1'), ('Class 2', 'Class 2'), ('Class 3', 'Class 3'), ('Class 4', 'Class 4'), ('Class 5', 'Class 5'), ('Class 6', 'Class 6'), ('JHS 1', 'JHS 1'), ('JHS 2', 'JHS 2'), ('JHS 3', 'JHS 3')], max_length=10)),
                ('term', models.CharField(choices=[('first', 'First Term'), ('second', 'Second Term'), ('third', 'Third Term')], max_length=10)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SCHEDULED', 'Scheduled'), ('PUBLISHED', 'Published')], default='DRAFT', max_length=10)),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Result',
                'verbose_name_plural': 'Results',
                'ordering': ['student__last_name', 'student__first_name', 'term'],
                'unique_together': {('student', 'class_name', 'term')},
            },
        ),
        migrations.CreateModel(
            name='ResultChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_by', models.EmailField(max_length=255)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('field_name', models.CharField(max_length=50)),
                ('previous_value', models.TextField(blank=True, null=True)),
                ('new_value', models.TextField(blank=True, null=True)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_logs', to='ResultsEntry.result')),
            ],
            options={
                'verbose_name': 'Result Change Log',
                'verbose_name_plural': 'Result Change Logs',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_score', models.DecimalField(decimal_places=2, help_text='Class score (max 40)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('exam_score', models.DecimalField(decimal_places=2, help_text='Exam score (max 60)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('class_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_results', to='ResultsEntry.classcourse')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_results', to='ResultsEntry.result')),
            ],
            options={
                'verbose_name': 'Course Result',
                'verbose_name_plural': 'Course Results',
                'ordering': ['class_course__course__name'],
                'unique_together': {('result', 'class_course')},
            },
        ),
    ]
